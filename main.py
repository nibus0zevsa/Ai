import random

# обучающая выборка (идеальное фото цифр от 0-9)
num0 = list('111101101101111')
num1 = list('001001001001001')
num2 = list('111001111100111')
num3 = list('111001111001111')
num4 = list('101101111001001')
num5 = list('111100111001111')
num6 = list('111100111101111')
num7 = list('111001001001001')
num8 = list('111101111101111')
num9 = list('111101111001111')

#список всех цифр в одном массиве

nums = [num0, num1, num2, num3, num4, num5, num6, num7, num8, num9]

tema = 5                  #какой цифре обучаем
n_sensor = 15             #колличество сенсоров
weights = [0 for i in range(n_sensor)]                            # "Обнуление весов"


# функция определяет, является ли полученное изображение 5
# возвращает Да если признано что 5. Возвращает Нет если отвергнуто что это 5

def perceptron(Sensor):
    b = 7                               # порог функции акиивации
    s = 0                               # начальное значение суммы
    for i in range(n_sensor):           # цикл суммирования сигналов от сенсоров
        s += int(Sensor[i]) * weights[i]
        if s >= b:
            return True                 # сумма превысила порог
        else:
            return False                # сумма меньше порога

# Уменьшение значения весов
# Если сеть ошиблась и выдала Да при входной цифре отличной от 5

def decrease(number):
    for i in range(n_sensor):
        if int(number[i]) == 1:             # возбужденный ли вход
            weights[i] -= 1                 # уменьшаем связанный со входом вес на единицу

# Увеличение значения весов
# Если сеть не ошиблась и выдала Да при поданной на вход  цифре 5

def increase(number):
    for i in range(n_sensor):
        if int(number[i]) == 1:             # возбужденный ли вход
            weights[i] += 1                 # увеличиваем связанный со входом вес на единицу

# тренировка сети
# колличесвто уроков
n = 1

for i in range(n):
    j = random.randint(0, 9)                # генерируем случайное число 0-9
    r = perceptron(nums[j])                 # результат обращения к сумматору (ответ Да или Нет)

    # если генератор выдал случайное число j не равное 5
    if j != tema:
        if r:                               # если  сумматор сказал Да(это 5), а j это не 5
                                            # ошибся

            decrease(nums[j])               # наказываем сеть (уменьшаем значение весов)


# если генератор выдал случайное число j, равное 5
        else:
            if not r:                       # если сумматор сказал Нет (c not значит Да это пятерка), и j=5. Не ошибся
                increase(nums[tema])        # Поощряем сеть (величиваем значение весов)

print(j)
print(weights) # вывод значения весов
